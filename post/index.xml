<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 星空海绵 - 星空浩瀚 | 海绵吸水</title>
    <link>https://xkhm.net/post/</link>
    <description>Recent content in Posts on 星空海绵 - 星空浩瀚 | 海绵吸水</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>星空海绵</copyright>
    <lastBuildDate>Mon, 28 Dec 2020 22:59:54 +0800</lastBuildDate><atom:link href="https://xkhm.net/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSS弹性盒子布局之Flex</title>
      <link>https://xkhm.net/post/css%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E5%B8%83%E5%B1%80%E4%B9%8Bflex/</link>
      <pubDate>Mon, 28 Dec 2020 22:59:54 +0800</pubDate>
      
      <guid>https://xkhm.net/post/css%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E5%B8%83%E5%B1%80%E4%B9%8Bflex/</guid>
      <description>前言：flex布局永远滴神！ 1.CSS盒子弹性布局 🤤弹性布局模型中，弹性容器的子元素可以在任何方向上排布，也可以“弹性伸缩”其尺寸，既可以增</description>
    </item>
    
    <item>
      <title>JS基础之Promise</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8Bpromise/</link>
      <pubDate>Sat, 26 Dec 2020 16:05:58 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8Bpromise/</guid>
      <description>前言：个人学习笔记，初识Promise 1.Promise解决了什么问题？ 用来解决 回调地狱 问题 回调地狱：在JS中，为了实现某些逻辑经常会写出层</description>
    </item>
    
    <item>
      <title>JS基础之手写bind</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%89%8B%E5%86%99bind/</link>
      <pubDate>Fri, 25 Dec 2020 08:24:35 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%89%8B%E5%86%99bind/</guid>
      <description>文章类型：学习笔记 1.bind()的使用 😏😏😏😏😏 let obj = { age: 18 } function getInfo(name, job) { console.log(name); console.log(job); console.log(this.age); } getInfo.bind(obj, &#39;星空海绵&#39;)(&#39;Software Engineer&#39;); bind在第一个参数之</description>
    </item>
    
    <item>
      <title>Vue从入门到出门</title>
      <link>https://xkhm.net/post/vue%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%87%BA%E9%97%A8/</link>
      <pubDate>Thu, 24 Dec 2020 22:16:35 +0800</pubDate>
      
      <guid>https://xkhm.net/post/vue%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%87%BA%E9%97%A8/</guid>
      <description>前言：人家都开始上vue3.0了，我还在重学vue2.0，啊这🤡🤡 提醒：个人学习笔记，适合随手翻阅，精读需考量。 1.手摸手（左手摸右手）搭建</description>
    </item>
    
    <item>
      <title>js基础</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 20 Dec 2020 23:48:22 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80/</guid>
      <description>1.JS中的变量 （1）变量提升和函数提升 变量提升和函数提升的过程： 创建阶段：JS解释器会找出需要提升的变量和函数，并给他们在内存中开辟好空间</description>
    </item>
    
    <item>
      <title>JS数组去重</title>
      <link>https://xkhm.net/post/js%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</link>
      <pubDate>Sun, 20 Dec 2020 18:12:21 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</guid>
      <description>文章类型：个人学习笔记 1.双循环遍历 let arr = [1,5,6,1,9,9,2,1]; arr.map((item,index) =&amp;gt; { arr.map((i,index1) =&amp;gt; { if(index !== index1 &amp;amp;&amp;amp; item === i){ arr.splice(index1,1); } }) }) console.log(arr); function unique(array){ for (let i = 0; i &amp;lt; array.length; i++) { for(let j = i+1; j &amp;lt; array.length; j++){ if(array[i] === array[j]){ arr.splice(j,1); } } } return arr; }</description>
    </item>
    
    <item>
      <title>JS基础之深浅拷贝</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D/</link>
      <pubDate>Sat, 19 Dec 2020 12:23:51 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D/</guid>
      <description>文章类型：个人学习笔记 前言 友情提醒：个人学习笔记，可能有写的不对的地方，还请大佬们发现了提醒一下小弟我。 1.浅拷贝 定义：一个对象直接拷贝已存</description>
    </item>
    
    <item>
      <title>一文详解JavaScript中的数组</title>
      <link>https://xkhm.net/post/%E4%B8%80%E6%96%87%E8%AF%A6%E8%A7%A3javascript%E4%B8%AD%E7%9A%84%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sat, 19 Dec 2020 12:23:51 +0800</pubDate>
      
      <guid>https://xkhm.net/post/%E4%B8%80%E6%96%87%E8%AF%A6%E8%A7%A3javascript%E4%B8%AD%E7%9A%84%E6%95%B0%E7%BB%84/</guid>
      <description>前言 最近在重学JS基础，然后正好学到数组这，前期是通过看视频学习的，后来发现通过看视频学习进度实在是太慢了，所以又开始看书看文档学，然后就开</description>
    </item>
    
  </channel>
</rss>
