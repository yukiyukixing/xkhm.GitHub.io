<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 星空海绵 - 星空浩瀚 | 海绵吸水</title>
    <link>https://xkhm.net/post/</link>
    <description>Recent content in Posts on 星空海绵 - 星空浩瀚 | 海绵吸水</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>星空海绵</copyright>
    <lastBuildDate>Tue, 02 Feb 2021 21:16:30 +0800</lastBuildDate><atom:link href="https://xkhm.net/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JS过滤树形结构数据</title>
      <link>https://xkhm.net/post/js%E8%BF%87%E6%BB%A4%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Tue, 02 Feb 2021 21:16:30 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E8%BF%87%E6%BB%A4%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%E6%95%B0%E6%8D%AE/</guid>
      <description>JS过滤树形结构数据在业务中有时候我们会遇到，比如说做一个完善的文档功能时就会遇到，之前我有遇到过，但是没有仔细研究，昨天看见沸点上有一位掘</description>
    </item>
    
    <item>
      <title>书读百遍，其义自见</title>
      <link>https://xkhm.net/post/%E4%B9%A6%E8%AF%BB%E7%99%BE%E9%81%8D%E5%85%B6%E4%B9%89%E8%87%AA%E8%A7%81/</link>
      <pubDate>Tue, 26 Jan 2021 07:41:58 +0800</pubDate>
      
      <guid>https://xkhm.net/post/%E4%B9%A6%E8%AF%BB%E7%99%BE%E9%81%8D%E5%85%B6%E4%B9%89%E8%87%AA%E8%A7%81/</guid>
      <description>今天晚上在跑步的时候，突然想到这句话。一直在想，以前说这句话是指读书读多，自然就领会到了其中的书意，颇有一番水到渠成的意味。但是这与我们日常</description>
    </item>
    
    <item>
      <title>Windows触摸板操作指南</title>
      <link>https://xkhm.net/post/windows%E8%A7%A6%E6%91%B8%E6%9D%BF%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 25 Jan 2021 21:58:47 +0800</pubDate>
      
      <guid>https://xkhm.net/post/windows%E8%A7%A6%E6%91%B8%E6%9D%BF%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/</guid>
      <description>windows触摸板操作指南： 1.找到触摸板设置 2.操作： 1.一个手指单击表示鼠标左键单击 2.两个手指点击等同于鼠标右键单击 3.拖动两根手指</description>
    </item>
    
    <item>
      <title>JS基础之Proxy</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8Bproxy/</link>
      <pubDate>Tue, 19 Jan 2021 21:53:51 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8Bproxy/</guid>
      <description>前言：学完补充 参考资料： 1.Proxy 2.Proxy() 构造器 1.介绍 首先我们在学Proxy之前我们思考一下，以前我们不是有 Object.defineProperty() 方法吗，为什么又出现了一个类似功能的 Proxy ,一</description>
    </item>
    
    <item>
      <title>从一场比赛开始大话JS面向对象</title>
      <link>https://xkhm.net/post/%E4%BB%8E%E4%B8%80%E5%9C%BA%E6%AF%94%E8%B5%9B%E5%BC%80%E5%A7%8B%E5%A4%A7%E8%AF%9Djs%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Thu, 14 Jan 2021 23:14:19 +0800</pubDate>
      
      <guid>https://xkhm.net/post/%E4%BB%8E%E4%B8%80%E5%9C%BA%E6%AF%94%E8%B5%9B%E5%BC%80%E5%A7%8B%E5%A4%A7%E8%AF%9Djs%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      <description>前言：最近在看JS对象相关的东西，看到继承那，想继承到底有什么用，就搜了一下，搜到了下面这个故事，然后突发奇想，想着能不能用JS实现一下呢，</description>
    </item>
    
    <item>
      <title>JS基础之继承</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%BB%A7%E6%89%BF/</link>
      <pubDate>Thu, 14 Jan 2021 08:35:17 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%BB%A7%E6%89%BF/</guid>
      <description>1.原型链继承 // 1. 原型链继承 function A() { } function B() { } B.prototype = new A(); let a = new B(); 缺点：1.原型中包含的引用值会在实例间共享2.子类型在实例化时不能给父类型构造</description>
    </item>
    
    <item>
      <title>编程思想</title>
      <link>https://xkhm.net/post/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/</link>
      <pubDate>Wed, 13 Jan 2021 22:06:38 +0800</pubDate>
      
      <guid>https://xkhm.net/post/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/</guid>
      <description>1.JS中继承有什么作用 需要让JS中的对象能连起来 受Java抽象化思想的影响，设计出了继承， 编码过程中可扩展性非常重要，后面新需求扩展写出的</description>
    </item>
    
    <item>
      <title>定型数组</title>
      <link>https://xkhm.net/post/%E5%AE%9A%E5%9E%8B%E6%95%B0%E7%BB%84/</link>
      <pubDate>Tue, 12 Jan 2021 21:21:51 +0800</pubDate>
      
      <guid>https://xkhm.net/post/%E5%AE%9A%E5%9E%8B%E6%95%B0%E7%BB%84/</guid>
      <description>1.定型数组 定型数组是ES新增的结构，目的是提升向原生库传输数据的效率。本质上是一种包含数值类型的数组。 （1）历史 随着浏览器的流行，需要使用</description>
    </item>
    
    <item>
      <title>Node文件夹读取</title>
      <link>https://xkhm.net/post/node%E6%96%87%E4%BB%B6%E5%A4%B9%E8%AF%BB%E5%8F%96/</link>
      <pubDate>Fri, 08 Jan 2021 19:13:51 +0800</pubDate>
      
      <guid>https://xkhm.net/post/node%E6%96%87%E4%BB%B6%E5%A4%B9%E8%AF%BB%E5%8F%96/</guid>
      <description>1.第一版本，读取某个固定文件目录下的文件，写成接口 初版本1.1 缺点：文件更新了，接口不会更新 let path = require(&amp;#34;path&amp;#34;); let fs = require(&amp;#34;fs&amp;#34;); let http= require(&amp;#34;http&amp;#34;); fs.readFile(&amp;#39;./config.json&amp;#39;, (err, data) =&amp;gt; { if (err) throw err; let fileDir =</description>
    </item>
    
    <item>
      <title>手写Promise</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%89%8B%E5%86%99promise/</link>
      <pubDate>Thu, 07 Jan 2021 21:50:29 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%89%8B%E5%86%99promise/</guid>
      <description>文章类型：个人学习笔记 手写 Promise 的前提是了解 Promise/A+ 规范，不说倒背如流，但是基本的点还是需要掌握的。 1.Promise/A+规范 原文地址：Promis</description>
    </item>
    
    <item>
      <title>JavaScript异步编程</title>
      <link>https://xkhm.net/post/javascript%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Mon, 04 Jan 2021 22:56:54 +0800</pubDate>
      
      <guid>https://xkhm.net/post/javascript%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</guid>
      <description>1.什么是异步？ (1)异步的作用 在前端编程中（甚至后端有时也是这样），我们在处理一些简短、快速的操作时，例如计算 1 + 1 的结果，往往在主线程中</description>
    </item>
    
    <item>
      <title>Vue2从入门到CV</title>
      <link>https://xkhm.net/post/vue2%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0cv/</link>
      <pubDate>Mon, 04 Jan 2021 19:44:36 +0800</pubDate>
      
      <guid>https://xkhm.net/post/vue2%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0cv/</guid>
      <description>前言：学习笔记，CV即指CV Vue的官方文档，也指 CV 网上的Vue业务代码😎😎 1.Vue是什么？ Vue (读音 /vjuː/，类似于 view) 是一套用于构建用</description>
    </item>
    
    <item>
      <title>JS面试题复习</title>
      <link>https://xkhm.net/post/js%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%8D%E4%B9%A0/</link>
      <pubDate>Mon, 04 Jan 2021 08:30:30 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%8D%E4%B9%A0/</guid>
      <description>1.对象 （1）深浅拷贝 只会拷贝对象的第一层 1.浅拷贝（4种） （1）直接赋值 let obj = { name: &amp;#39;XKHM&amp;#39;, age: 25, job: &amp;#39;Software Engineer&amp;#39; } let obj1 = obj; console.log(obj1 === obj); （2）Object.assi</description>
    </item>
    
    <item>
      <title>时间管理和效率</title>
      <link>https://xkhm.net/post/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E5%92%8C%E6%95%88%E7%8E%87/</link>
      <pubDate>Sun, 03 Jan 2021 13:54:24 +0800</pubDate>
      
      <guid>https://xkhm.net/post/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E5%92%8C%E6%95%88%E7%8E%87/</guid>
      <description>前言，一般情况下，当一个人想更优秀时，他就会去学习怎样在有限的时间里可以处理更多的事情，这就涉及到了时间管理和效率的问题，我最近也一直在思考</description>
    </item>
    
    <item>
      <title>JS之日常解题</title>
      <link>https://xkhm.net/post/js%E4%B9%8B%E6%97%A5%E5%B8%B8%E8%A7%A3%E9%A2%98/</link>
      <pubDate>Thu, 31 Dec 2020 22:06:11 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E4%B9%8B%E6%97%A5%E5%B8%B8%E8%A7%A3%E9%A2%98/</guid>
      <description>前言：好记性不如烂笔头，知识来自于点点滴滴的记录 1.取出对象中一部分放到另一个对象中 今天下午在掘金摸鱼的时候，看见有一个小同学发了一个沸点 嗯</description>
    </item>
    
    <item>
      <title>CSS基础</title>
      <link>https://xkhm.net/post/css%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 29 Dec 2020 22:08:43 +0800</pubDate>
      
      <guid>https://xkhm.net/post/css%E5%9F%BA%E7%A1%80/</guid>
      <description>1.盒模型 MDN 盒模型 （1）.什么是CSS 盒模型? 块级盒子（Block box）和内联盒子（inline box） 完整的 CSS 盒模型应用于块级盒子，内联</description>
    </item>
    
    <item>
      <title>CSS弹性盒子布局之Flex</title>
      <link>https://xkhm.net/post/css%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E5%B8%83%E5%B1%80%E4%B9%8Bflex/</link>
      <pubDate>Mon, 28 Dec 2020 22:59:54 +0800</pubDate>
      
      <guid>https://xkhm.net/post/css%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E5%B8%83%E5%B1%80%E4%B9%8Bflex/</guid>
      <description>前言：flex布局永远滴神！ 1.CSS盒子弹性布局 🤤弹性布局模型中，弹性容器的子元素可以在任何方向上排布，也可以“弹性伸缩”其尺寸，既可以增</description>
    </item>
    
    <item>
      <title>JS基础之Promise</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8Bpromise/</link>
      <pubDate>Sat, 26 Dec 2020 16:05:58 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8Bpromise/</guid>
      <description>前言：个人学习笔记，初识Promise 1.Promise解决了什么问题？ 用来解决 回调地狱 问题 回调地狱：在JS中，为了实现某些逻辑经常会写出层</description>
    </item>
    
    <item>
      <title>JS基础之手写bind</title>
      <link>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%89%8B%E5%86%99bind/</link>
      <pubDate>Fri, 25 Dec 2020 08:24:35 +0800</pubDate>
      
      <guid>https://xkhm.net/post/js%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%89%8B%E5%86%99bind/</guid>
      <description>文章类型：学习笔记 1.bind()的使用 😏😏😏😏😏 let obj = { age: 18 } function getInfo(name, job) { console.log(name); console.log(job); console.log(this.age); } getInfo.bind(obj, &#39;星空海绵&#39;)(&#39;Software Engineer&#39;); bind在第一个参数之</description>
    </item>
    
    <item>
      <title>Vue从入门到出门</title>
      <link>https://xkhm.net/post/vue%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%87%BA%E9%97%A8/</link>
      <pubDate>Thu, 24 Dec 2020 22:16:35 +0800</pubDate>
      
      <guid>https://xkhm.net/post/vue%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%87%BA%E9%97%A8/</guid>
      <description>前言：人家都开始上vue3.0了，我还在重学vue2.0，啊这🤡🤡 提醒：个人学习笔记，适合随手翻阅，精读需考量。 1.手摸手（左手摸右手）搭建</description>
    </item>
    
  </channel>
</rss>
